{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kenjifleming/course-challenges/wise-wager/Wise-Wagers/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  var _iterator = _createForOfIteratorHelper(definedDirectives),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var directive = _step.value;\n      locationsMap[directive.name] = directive.locations;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var astDefinitions = context.getDocument().definitions;\n  var _iterator2 = _createForOfIteratorHelper(astDefinitions),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var def = _step2.value;\n      if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n        locationsMap[def.name.value] = def.locations.map(function (name) {\n          return name.value;\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), {\n          nodes: node\n        }));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), {\n          nodes: node\n        }));\n      }\n    }\n  };\n}\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        'kind' in parentNode || invariant(false);\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}","map":{"version":3,"names":["inspect","invariant","GraphQLError","OperationTypeNode","DirectiveLocation","Kind","specifiedDirectives","KnownDirectivesRule","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_iterator","_createForOfIteratorHelper","_step","s","n","done","directive","value","name","locations","err","e","f","astDefinitions","getDocument","definitions","_iterator2","_step2","def","kind","DIRECTIVE_DEFINITION","map","Directive","node","_key","_parent","_path","ancestors","reportError","concat","nodes","candidateLocation","getDirectiveLocationForASTPath","includes","appliedTo","length","OPERATION_DEFINITION","getDirectiveLocationForOperation","operation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION","QUERY","MUTATION","SUBSCRIPTION"],"sources":["/Users/kenjifleming/course-challenges/wise-wager/Wise-Wagers/client/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs"],"sourcesContent":["import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}