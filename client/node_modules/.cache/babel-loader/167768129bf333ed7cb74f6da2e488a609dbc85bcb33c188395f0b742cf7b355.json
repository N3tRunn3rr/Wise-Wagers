{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kenjifleming/course-challenges/wise-wager/Wise-Wagers/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { invariant } from '../jsutils/invariant.mjs';\nvar LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lastLineStart = 0;\n  var line = 1;\n  var _iterator = _createForOfIteratorHelper(source.body.matchAll(LineRegExp)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var match = _step.value;\n      typeof match.index === 'number' || invariant(false);\n      if (match.index >= position) {\n        break;\n      }\n      lastLineStart = match.index + match[0].length;\n      line += 1;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    line: line,\n    column: position + 1 - lastLineStart\n  };\n}","map":{"version":3,"names":["invariant","LineRegExp","getLocation","source","position","lastLineStart","line","_iterator","_createForOfIteratorHelper","body","matchAll","_step","s","n","done","match","value","index","length","err","e","f","column"],"sources":["/Users/kenjifleming/course-challenges/wise-wager/Wise-Wagers/client/node_modules/graphql/language/location.mjs"],"sourcesContent":["import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,IAAMC,UAAU,GAAG,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EAC5C,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,IAAI,GAAG,CAAC;EAAC,IAAAC,SAAA,GAAAC,0BAAA,CAEOL,MAAM,CAACM,IAAI,CAACC,QAAQ,CAACT,UAAU,CAAC;IAAAU,KAAA;EAAA;IAApD,KAAAJ,SAAA,CAAAK,CAAA,MAAAD,KAAA,GAAAJ,SAAA,CAAAM,CAAA,IAAAC,IAAA,GAAsD;MAAA,IAA3CC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;MACd,OAAOD,KAAK,CAACE,KAAK,KAAK,QAAQ,IAAIjB,SAAS,CAAC,KAAK,CAAC;MAEnD,IAAIe,KAAK,CAACE,KAAK,IAAIb,QAAQ,EAAE;QAC3B;MACF;MAEAC,aAAa,GAAGU,KAAK,CAACE,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM;MAC7CZ,IAAI,IAAI,CAAC;IACX;EAAC,SAAAa,GAAA;IAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;EAAA;IAAAZ,SAAA,CAAAc,CAAA;EAAA;EAED,OAAO;IACLf,IAAI,EAAJA,IAAI;IACJgB,MAAM,EAAElB,QAAQ,GAAG,CAAC,GAAGC;EACzB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}